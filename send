#!/usr/bin/env bash

PROCEDURE=$1

PROTOCOL="xoscrp"
cache_file="$HOME/.cache/${PROTOCOL}"
comms_dir=".${PROTOCOL}/"

# ================================ [ INIT ] ================================ #

set_windows_mountpoint() {
  read -r -p 'Enter your windows MOUNTPOINT: ' partition
  # SANITIZE: mount point name
  [[ $partition != /* ]] && partition="/$partition"
  # CHECK: mount point exists
  if [ ! -d $partition ]; then
    echo "Invalid mountpoint: $partition"
    exit 1
  fi
  # ACTION: Write to cache
  echo $partition > $cache_file
}

get_windows_mountpoint() {
  [ ! -f $cache_file ] && set_windows_mountpoint
  windows_mountpoint=$(cat $cache_file)
  echo $windows_mountpoint
}

# ENSURE: save windows mountpoint in cache
if [ ! -f $cache_file ]; then
  lsblk -o NAME,TYPE,SIZE,MOUNTPOINT
  set_windows_mountpoint
fi

# ENSURE: windows_comm_dir exists
windows_mountpoint=$(get_windows_mountpoint)
windows_comm_dir="${windows_mountpoint}/${comms_dir}"
[ ! -d "${windows_comm_dir}" ] && mkdir -p "${windows_comm_dir}"

# =========================== [ COMMUNICATIONS ] =========================== #

# CHECK: remote procedure
[[ -z "$PROCEDURE" ]] && { echo "No procedure specified"; exit 1; }

# SANITIZE: remote procedure name
[[ ! "$PROCEDURE" =~ ^[A-Za-z0-9_-]+$ ]] && { echo "Invalid procedure"; exit 1; }

# ACTION: Run remote procedure
touch "${windows_comm_dir}/${PROCEDURE}"
